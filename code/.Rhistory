library(tidyverse)
install.packages(c("tidyverse","lubridate","mlr","gbm","e1071","randomForest"), dependencies = TRUE)
library(tidyverse)
rm(list = ls())
gc()
# Reading_data ------------------------------------------------------------
df = read_delim("../../data/dat_step_10.csv",
delim = ",",
col_names = TRUE) %>% select(-X1)
# mantaining columns that will be used
df = df %>% select(-(Lateral_plastico:Meio_poroso))
setwd("C:/Users/vinic/Google Drive/Mestrado/pratical_project/variability_part2/greenhouse_tseries/code")
# Reading_data ------------------------------------------------------------
df = read_delim("../../data/dat_step_10.csv",
delim = ",",
col_names = TRUE) %>% select(-X1)
# mantaining columns that will be used
df = df %>% select(-(Lateral_plastico:Meio_poroso))
head(df)
# creating look back for time series prediction
look_back = function(df, colNames, lags){
n = nrow(dat)
vet_names = colNames
for(lag in 1:5){
for(col in vet_names){
new_col = paste0(col,lag)
row_range_in = 1:(n-lag)
df[,new_col] = c(rep(NA, lag), df[row_range_in,col])
}
}
}
# creating look back for time series prediction
look_back = function(df, colNames, lags){
n = nrow(dat)
vet_names = colNames
for(lag in 1:5){
for(col in vet_names){
new_col = paste0(col,lag)
row_range_in = 1:(n-lag)
df[,new_col] = c(rep(NA, lag), df[row_range_in,col])
}
}
retunr(df)
}
d = look_back(df,c(temp))
# creating look back for time series prediction
look_back = function(df, colNames, lags){
n = nrow(df)
vet_names = colNames
for(lag in 1:5){
for(col in vet_names){
new_col = paste0(col,lag)
row_range_in = 1:(n-lag)
df[,new_col] = c(rep(NA, lag), df[row_range_in,col])
}
}
retunr(df)
}
d = look_back(df,c(temp))
d = look_back(df,c("temp"))
# creating look back for time series prediction
look_back = function(df, colNames, lags){
n = nrow(df)
vet_names = colNames
for(lag in 1){
for(col in vet_names){
new_col = paste0(col,lag)
row_range_in = 1:(n-lag)
df[,new_col] = c(rep(NA, lag), df[row_range_in,col])
}
}
retunr(df)
}
d = look_back(df,c("temp"))
n = nrow(df)
n
vet_names = colNames
vet_names = c("temp")
lag = 1
new_col = paste0(col,lag)
col = "temp"
new_col = paste0(col,lag)
new_col
row_range_in = 1:(n-lag)
tail(row_range_in)
rep(NA, lag)
length(c(rep(NA, lag), df[row_range_in,col]))
df[,new_col] = c(rep(NA, lag), df[row_range_in,col])
df[row_range_in,col]
c(rep(NA, lag), df[row_range_in,col])
rep(NA,lag)
c(rep(NA,lag), df[row_range_in,col])
as.vector(c(rep(NA,lag), df[row_range_in,col]))
c(rep(NA,lag), df[row_range_in,col])
c(rep(NA,lag), unname(df[row_range_in,col]))
df = read_delim("../../data/dat_step_10.csv",
delim = ",",
col_names = TRUE) %>% select(-X1) %>% as.data.frame()
c(rep(NA,lag), unname(df[row_range_in,col]))
# creating look back for time series prediction
look_back = function(df, colNames, lags){
n = nrow(df)
vet_names = colNames
for(lag in 1){
for(col in vet_names){
new_col = paste0(col,lag)
row_range_in = 1:(n-lag)
df[,new_col] = c(rep(NA,lag), unname(df[row_range_in,col]))
}
}
retunr(df)
}
d = look_back(df,c("temp"))
# creating look back for time series prediction
look_back = function(df, colNames, lags){
n = nrow(df)
vet_names = colNames
for(lag in 1){
for(col in vet_names){
new_col = paste0(col,lag)
row_range_in = 1:(n-lag)
df[,new_col] = c(rep(NA,lag), unname(df[row_range_in,col]))
}
}
return(df)
}
d = look_back(df,c("temp"))
head(d)
d = df %>% group_by(x,y,z) %>% summarise(temp_media = mean(temp))
d
d = df %>% group_by(x,y,z) %>% summarise(temp_media = mean(temp)) %>% arrange(temp_media)
d
d = df %>% group_by(x,y,z) %>% summarise(temp_media = mean(temp)) %>% arrange(desc(temp_media))
d
# creating look back for time series prediction
look_back = function(df, colNames, lags){
n = nrow(df)
vet_names = colNames
for(lag in 1){
for(col in vet_names){
new_col = paste0(col,lag)
row_range_in = 1:(n-lag)
df[,new_col] = c(rep(NA,lag), unname(df[row_range_in,col]))
}
}
return(df[,new_col])
}
d = df %>% group_by(x,y,z) %>% summarise(temp_media = look_back(.,"temp",1))
d = look_back(df,c("temp"))
head(d)
length(d)
d = df %>% group_by(x,y,z) %>% summarise(temp_media = look_back(.,"temp"))
d = df %>% group_by(x,y,z)
d = look_back(d,c("temp"))
d = df %>% group_by(x,y,z)
mean(d)
mean(d$temp)
# creating look back for time series prediction
look_back = function(df, colNames, lags){
n = nrow(df)
vet_names = colNames
for(lag in 1){
for(col in vet_names){
new_col = paste0(col,lag)
row_range_in = 1:(n-lag)
df[,new_col] = c(rep(NA,lag), unname(df[row_range_in,col]))
}
}
return(df[,new_col])
}
d = look_back(df,c("temp"))
head(d)
# creating look back for time series prediction
look_back = function(df, colNames, lags){
n = nrow(df)
vet_names = colNames
for(lag in 1){
for(col in vet_names){
new_col = paste0(col,lag)
row_range_in = 1:(n-lag)
df[,new_col] = c(rep(NA,lag), unname(df[row_range_in,col]))
}
}
return(df)
}
d = look_back(df,c("temp"))
head(d)
# creating look back for time series prediction
look_back = function(df, colNames, lags = 1:10){
n = nrow(df)
vet_names = colNames
for(lag in lags){
for(col in vet_names){
new_col = paste0(col,lag)
row_range_in = 1:(n-lag)
df[,new_col] = c(rep(NA,lag), unname(df[row_range_in,col]))
}
}
return(df)
}
d = look_back(df,"temp")
head(d)
df = df %>% mutate(concat_coord = paste0(x,y,z))
head(df)
df = df %>% mutate(concat_coord = paste0(as.character(x),as.character(y),as.character(z)))
head(df)
length(unique(df$concat_coord))
unique_coords = unique(df$concat_coord)
df %>% filter(concat_coord == unique_coords)
df %>% filter(concat_coord == unique_coords[1])
dfi = list()
library(tidyverse)
rm(list = ls())
gc()
# Reading_data ------------------------------------------------------------
df = read_delim("../../data/dat_step_10.csv",
delim = ",",
col_names = TRUE) %>% select(-X1) %>% as.data.frame()
# mantaining columns that will be used
df = df %>% select(-(Lateral_plastico:Meio_poroso))
# creating look back for time series prediction
look_back = function(df, colNames, lags = 1:10){
n = nrow(df)
vet_names = colNames
for(lag in lags){
for(col in vet_names){
new_col = paste0(col,lag)
row_range_in = 1:(n-lag)
df[,new_col] = c(rep(NA,lag), unname(df[row_range_in,col]))
}
}
return(df)
}
#criando campo concatenado para filtro
df = df %>% mutate(concat_coord = paste0(as.character(x),as.character(y),as.character(z)))
unique_coords = unique(df$concat_coord)
dfi = list()
for(xyz in unique_coords){
dfi[[xyz]] = df %>% filter(concat_coord == xyz)
dfi[[xyz]] = look_back(df, "temp")
}
dfi[[1]]
unique_coords
xyz
unique(df$concat_coord)
library(tidyverse)
rm(list = ls())
gc()
# Reading_data ------------------------------------------------------------
df = read_delim("../../data/dat_step_10.csv",
delim = ",",
col_names = TRUE) %>% select(-X1) %>% as.data.frame()
# mantaining columns that will be used
df = df %>% select(-(Lateral_plastico:Meio_poroso))
# creating look back for time series prediction
look_back = function(df, colNames, lags = 1:10){
n = nrow(df)
vet_names = colNames
for(lag in lags){
for(col in vet_names){
new_col = paste0(col,lag)
row_range_in = 1:(n-lag)
df[,new_col] = c(rep(NA,lag), unname(df[row_range_in,col]))
}
}
return(df)
}
#criando campo concatenado para filtro
df = df %>% mutate(concat_coord = paste0(as.character(x),as.character(y),as.character(z)))
unique_coords = unique(df$concat_coord)
dfi = list()
for(xyz in unique_coords){
dfi[[xyz]] = df %>% filter(concat_coord == xyz)
dfi[[xyz]] = look_back(dfi[[xyz]], "temp")
}
dfi[[1]]
col_lagged = c("temp","ur")
dfi = list()
col_lagged = c("temp","ur")
for(xyz in unique_coords){
dfi[[xyz]] = df %>% filter(concat_coord == xyz)
dfi[[xyz]] = look_back(dfi[[xyz]], col_lagged)
}
dfi[[1]]
df = do.call(bind_rows, dfi)
dim(df)
head(df)
sort(colnames(df))
library(tidyverse)
rm(list = ls())
gc()
# Reading_data ------------------------------------------------------------
df = read_delim("../../data/dat_step_10.csv",
delim = ",",
col_names = TRUE) %>% select(-X1) %>% as.data.frame()
# mantaining columns that will be used
df = df %>% select(-(Lateral_plastico:Meio_poroso))
# creating look back for time series prediction
look_back = function(df, colNames, lags = 1:10){
n = nrow(df)
vet_names = colNames
for(lag in lags){
for(col in vet_names){
new_col = paste0(col,0,lag)
row_range_in = 1:(n-lag)
df[,new_col] = c(rep(NA,lag), unname(df[row_range_in,col]))
}
}
return(df)
}
#criando campo concatenado para filtro
df = df %>% mutate(concat_coord = paste0(as.character(x),as.character(y),as.character(z)))
unique_coords = unique(df$concat_coord)
dfi = list()
col_lagged = c("temp","ur")
for(xyz in unique_coords){
dfi[[xyz]] = df %>% filter(concat_coord == xyz)
dfi[[xyz]] = look_back(dfi[[xyz]], col_lagged)
}
df = do.call(bind_rows, dfi)
sort(colnames(df))
sortedNames = sort(colnames(df))
df = df[c(sortedNames)]
head(df)
c(1,2,3,4,5)
c(1,2,3,5,4,10)
c(1,2,3,5,4,10,6)
sort(c(1,2,3,5,4,10,6))
library(tidyverse)
rm(list = ls())
gc()
# Reading_data ------------------------------------------------------------
df = read_delim("../../data/dat_step_10.csv",
delim = ",",
col_names = TRUE) %>% select(-X1) %>% as.data.frame()
# mantaining columns that will be used
df = df %>% select(-(Lateral_plastico:Meio_poroso))
# creating look back for time series prediction
look_back = function(df, colNames, lags = 1:10){
n = nrow(df)
vet_names = colNames
for(lag in lags){
for(col in vet_names){
new_col = paste0(col,lag)
row_range_in = 1:(n-lag)
df[,new_col] = c(rep(NA,lag), unname(df[row_range_in,col]))
}
}
return(df)
}
#criando campo concatenado para filtro
df = df %>% mutate(concat_coord = paste0(as.character(x),as.character(y),as.character(z)))
unique_coords = unique(df$concat_coord)
dfi = list()
col_lagged = c("temp","ur")
for(xyz in unique_coords){
dfi[[xyz]] = df %>% filter(concat_coord == xyz)
dfi[[xyz]] = look_back(dfi[[xyz]], col_lagged)
}
df = do.call(bind_rows, dfi)
sortedNames = sort(colnames(df))
df = df[c(sortedNames)]
head(df)
files_tbmod = list.files('../../data//',
full.names = T)
files_tbmod
# Reading_data ------------------------------------------------------------
df_list = lapply(files_tbmod, function(x) read_delim(x, delim = ",",
col_names = TRUE) %>% select(-X1) %>% as.data.frame())
length(df_list)
head(df_list[[1]])
